{%- set license_classifiers = {
    'Beerware': 'License :: Freely Distributable',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "{{ cookiecutter.project_slug }}"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
dynamic = ["version", "description"]

authors = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}"},
]

# see https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
{%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
]

dependencies = [

]

{%- if cookiecutter.remote_git_repo != "" %}
[project.urls]
Source = "{{ cookiecutter.remote_git_repo }}"
{%- endif %}

# [project.scripts]
# script_name = "{{ cookiecutter.project_slug }}:function"

[project.optional-dependencies]
test = [
    "pytest >=4.0.0",
    "pytest-cov",
    "pytest-mock",
    "pytest-randomly",
    "tox",
]
dev = [
    "black",
    "flake8",
    "flake8-comprehensions",
    "flake8-bandit",
    "isort >= 5.0.0",
    "keyring",
    "pre-commit",
]

[tool.black]
line-length = 79
target-version = ['py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/.git
^/.tox
^/.venv
^/.build
^/.dist
'''

[tool.isort]
line_length=79
multi_line_output=3
length_sort="True"
include_trailing_comma="True"

[tool.pytest.ini_options]
markers = [
    "functional: marks tests as functional (deselect with '-m \"not functional\"')",
]
addopts = [
    "--strict-markers",
]
